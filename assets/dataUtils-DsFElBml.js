import{n as W,y as X,dY as _t,o as Dt,bY as Rt,s as Lt,ar as Nt,k as Z,c6 as Et,N as nt,an as jt,a6 as Ot,aJ as Gt,ij as Ut,gJ as qt}from"./index-D0xqwRGM.js";let gt=class{constructor(e=null,n=null,l=null){this.minValue=e,this.maxValue=n,this.noDataValue=l}};const Wt=9999999e31,Jt=2e-7,Xt={u1:[0,1],u2:[0,3],u4:[0,15],u8:[0,255],s8:[-128,127],u16:[0,65535],s16:[-32768,32767],u32:[0,4294967295],s32:[-2147483648,2147483647],f32:[-34028234663852886e22,34028234663852886e22],f64:[-Number.MAX_VALUE,Number.MAX_VALUE],unknown:void 0,c64:void 0,c128:void 0};function ht(t){return Xt[t]??[-34028234663852886e22,34028234663852886e22]}function xe(t,e){return t==null||e==null?"s32":t<0?t>=-128&&e<128?"s8":t>=-32768&&e<32768?"s16":"s32":e<256?"u8":e<65536?"u16":"u32"}function we(t){return((t==null?void 0:t.startsWith("s"))||(t==null?void 0:t.startsWith("u")))??!1}function ye(t,e,n){var p,f;if(t.depthCount&&t.depthCount>1)return;const{pixels:l,statistics:a,pixelType:i}=t,o=l[0].length,u=t.bandMasks??[],h=t.mask??new Uint8Array(o).fill(255),r=i==="f32"||i==="f64",s=ht(i);let c=!1;for(let d=0;d<l.length;d++){const m=typeof e=="number"?e:e[d];if(m==null)continue;const x=((p=a==null?void 0:a[d])==null?void 0:p.minValue)??s[0],y=((f=a==null?void 0:a[d])==null?void 0:f.maxValue)??s[1];if(x>m+Number.EPSILON||y<m-Number.EPSILON)continue;const A=u[d]||h.slice(),k=l[d],M=n==null?void 0:n.customFloatTolerance;if(r&&M!==0){let g=M;g||(g=Math.abs(m)>=Wt?Jt*Math.abs(m):i==="f32"?2**-23:Number.EPSILON);for(let w=0;w<k.length;w++)A[w]&&Math.abs(k[w]-m)<g&&(k[w]=0,A[w]=0,h[w]=0,c=!0)}else for(let g=0;g<k.length;g++)A[g]&&k[g]===m&&(k[g]=0,A[g]=0,h[g]=0,c=!0);u[d]=A}c&&(t.bandMasks=t.bandMasks||t.pixels.length>1?u:null,t.mask=h),c&&"updateStatistics"in t&&t.updateStatistics()}var K;let O=K=class extends Rt{static createEmptyBand(t,e){return new(K.getPixelArrayConstructor(t))(e)}static combineBandMasks(t){if(t.length<2)return t[0];const e=t[0].length,n=new Uint8Array(e).fill(255);for(let l=0;l<t.length;l++){const a=t[l];for(let i=0;i<e;i++)a[i]||(n[i]=0)}return n}static getPixelArrayConstructor(t){let e;switch(t){case"u1":case"u2":case"u4":case"u8":e=Uint8Array;break;case"u16":e=Uint16Array;break;case"u32":e=Uint32Array;break;case"s8":e=Int8Array;break;case"s16":e=Int16Array;break;case"s32":e=Int32Array;break;case"f32":case"c64":case"c128":case"unknown":e=Float32Array;break;case"f64":e=Float64Array}return e}constructor(t){super(t),this.width=null,this.height=null,this.pixelType="f32",this.validPixelCount=null,this.mask=null,this.maskIsAlpha=!1,this.premultiplyAlpha=!1,this.statistics=null,this.depthCount=1}castPixelType(t){if(!t)return"f32";let e=t.toLowerCase();return["u1","u2","u4"].includes(e)?e="u8":["unknown","u8","s8","u16","s16","u32","s32","f32","f64"].includes(e)||(e="f32"),e}getPlaneCount(){var t;return(t=this.pixels)==null?void 0:t.length}addData(t){if(!t.pixels||t.pixels.length!==this.width*this.height)throw new Lt("pixelblock:invalid-or-missing-pixels","add data requires valid pixels array that has same length defined by pixel block width * height");this.pixels||(this.pixels=[]),this.statistics||(this.statistics=[]),this.pixels.push(t.pixels),this.statistics.push(t.statistics??new gt)}getAsRGBA(){const t=new ArrayBuffer(this.width*this.height*4);switch(this.pixelType){case"s8":case"s16":case"u16":case"s32":case"u32":case"f32":case"f64":this._fillFromNon8Bit(t);break;default:this._fillFrom8Bit(t)}return new Uint8ClampedArray(t)}getAsRGBAFloat(){const t=new Float32Array(this.width*this.height*4);return this._fillFrom32Bit(t),t}updateStatistics(){if(!this.pixels)return;this.statistics=this.pixels.map(n=>this._calculateBandStatistics(n,this.mask));const t=this.mask;let e=0;if(t!=null)for(let n=0;n<t.length;n++)t[n]&&e++;else e=this.width*this.height;this.validPixelCount=e}clamp(t){if(!t||t==="f64"||t==="f32"||!this.pixels)return;const[e,n]=ht(t),l=this.pixels,a=this.width*this.height,i=l.length;let o,u,h;const r=[];for(let s=0;s<i;s++){h=K.createEmptyBand(t,a),o=l[s];for(let c=0;c<a;c++)u=o[c],h[c]=u>n?n:u<e?e:u;r.push(h)}this.pixels=r,this.pixelType=t}extractBands(t){var c;const{pixels:e,statistics:n}=this;if(t==null||t.length===0||!e||e.length===0)return this;const l=e.length,a=t.some(p=>p>=e.length),i=l===t.length&&!t.some((p,f)=>p!==f);if(a||i)return this;const o=((c=this.bandMasks)==null?void 0:c.length)===l?t.map(p=>this.bandMasks[p]):void 0;let{mask:u,validPixelCount:h}=this;const{width:r,height:s}=this;return o!=null&&o.length&&(u=K.combineBandMasks(o),h=u.filter(p=>!!p).length),new K({pixelType:this.pixelType,width:r,height:s,mask:u,bandMasks:o,validPixelCount:h,maskIsAlpha:this.maskIsAlpha,pixels:t.map(p=>e[p]),statistics:n&&t.map(p=>n[p])})}clone(){const t=new K({width:this.width,height:this.height,pixelType:this.pixelType,maskIsAlpha:this.maskIsAlpha,validPixelCount:this.validPixelCount});let e;this.mask!=null&&(this.mask instanceof Uint8Array?t.mask=new Uint8Array(this.mask):t.mask=this.mask.slice(0)),this.bandMasks&&(t.bandMasks=this.bandMasks.map(l=>new Uint8Array(l)));const n=K.getPixelArrayConstructor(this.pixelType);if(this.pixels&&this.pixels.length>0){t.pixels=[];const l=!!this.pixels[0].slice;for(e=0;e<this.pixels.length;e++)t.pixels[e]=l?this.pixels[e].slice(0,this.pixels[e].length):new n(this.pixels[e])}if(this.statistics)for(t.statistics=[],e=0;e<this.statistics.length;e++)t.statistics[e]=Nt(this.statistics[e]);return t.premultiplyAlpha=this.premultiplyAlpha,t}_fillFrom8Bit(t){const{mask:e,maskIsAlpha:n,premultiplyAlpha:l,pixels:a}=this;if(!t||!(a!=null&&a.length))return void Z.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");let i,o,u,h;i=o=u=a[0],a.length>=3?(o=a[1],u=a[2]):a.length===2&&(o=a[1]);const r=new Uint32Array(t),s=this.width*this.height;if(i.length===s)if(e!=null&&e.length===s)if(n)for(h=0;h<s;h++){const c=e[h];if(c){const p=c/255;r[h]=l?c<<24|u[h]*p<<16|o[h]*p<<8|i[h]*p:c<<24|u[h]<<16|o[h]<<8|i[h]}}else for(h=0;h<s;h++)e[h]&&(r[h]=255<<24|u[h]<<16|o[h]<<8|i[h]);else for(h=0;h<s;h++)r[h]=255<<24|u[h]<<16|o[h]<<8|i[h];else Z.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.")}_fillFromNon8Bit(t){const{pixels:e,mask:n,statistics:l}=this;if(!t||!(e!=null&&e.length))return void Z.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");const a=this.pixelType;let i=1,o=0,u=1;if(l&&l.length>0){for(const m of l)if(m.minValue!=null&&(o=Math.min(o,m.minValue)),m.maxValue!=null&&m.minValue!=null){const x=m.maxValue-m.minValue;u=Math.max(u,x)}i=255/u}else{let m=255;a==="s8"?(o=-128,m=127):a==="u16"?m=65535:a==="s16"?(o=-32768,m=32767):a==="u32"?m=4294967295:a==="s32"?(o=-2147483648,m=2147483647):a==="f32"?(o=-34e38,m=34e38):a==="f64"&&(o=-Number.MAX_VALUE,m=Number.MAX_VALUE),i=255/(m-o)}const h=new Uint32Array(t),r=this.width*this.height;let s,c,p,f,d;if(s=c=p=e[0],s.length!==r)return Z.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.");if(e.length>=2)if(c=e[1],e.length>=3&&(p=e[2]),n!=null&&n.length===r)for(f=0;f<r;f++)n[f]&&(h[f]=255<<24|(p[f]-o)*i<<16|(c[f]-o)*i<<8|(s[f]-o)*i);else for(f=0;f<r;f++)h[f]=255<<24|(p[f]-o)*i<<16|(c[f]-o)*i<<8|(s[f]-o)*i;else if(n!=null&&n.length===r)for(f=0;f<r;f++)d=(s[f]-o)*i,n[f]&&(h[f]=255<<24|d<<16|d<<8|d);else for(f=0;f<r;f++)d=(s[f]-o)*i,h[f]=255<<24|d<<16|d<<8|d}_fillFrom32Bit(t){const{pixels:e,mask:n}=this;if(!t||!(e!=null&&e.length))return Z.getLogger(this).error("getAsRGBAFloat()","Unable to convert to RGBA. The input pixel block is empty.");let l,a,i,o;l=a=i=e[0],e.length>=3?(a=e[1],i=e[2]):e.length===2&&(a=e[1]);const u=this.width*this.height;if(l.length!==u)return Z.getLogger(this).error("getAsRGBAFloat()","Unable to convert to RGBA. The pixelblock is invalid.");let h=0;if(n!=null&&n.length===u)for(o=0;o<u;o++)t[h++]=l[o],t[h++]=a[o],t[h++]=i[o],t[h++]=1&n[o];else for(o=0;o<u;o++)t[h++]=l[o],t[h++]=a[o],t[h++]=i[o],t[h++]=1}_calculateBandStatistics(t,e){let n=1/0,l=-1/0;const a=t.length;let i,o=0;if(e!=null)for(i=0;i<a;i++)e[i]&&(o=t[i],n=o<n?o:n,l=o>l?o:l);else for(i=0;i<a;i++)o=t[i],n=o<n?o:n,l=o>l?o:l;return new gt(n,l)}};W([X({json:{write:!0}})],O.prototype,"width",void 0),W([X({json:{write:!0}})],O.prototype,"height",void 0),W([X({json:{write:!0}})],O.prototype,"pixelType",void 0),W([_t("pixelType")],O.prototype,"castPixelType",null),W([X({json:{write:!0}})],O.prototype,"validPixelCount",void 0),W([X({json:{write:!0}})],O.prototype,"mask",void 0),W([X({json:{write:!0}})],O.prototype,"maskIsAlpha",void 0),W([X({json:{write:!0}})],O.prototype,"pixels",void 0),W([X()],O.prototype,"premultiplyAlpha",void 0),W([X({json:{write:!0}})],O.prototype,"statistics",void 0),W([X({json:{write:!0}})],O.prototype,"depthCount",void 0),W([X({json:{write:!0}})],O.prototype,"noDataValues",void 0),W([X({json:{write:!0}})],O.prototype,"bandMasks",void 0),O=K=W([Dt("esri.layers.support.PixelBlock")],O);const _=O;var xt,wt;(function(t){t[t.matchAny=0]="matchAny",t[t.matchAll=1]="matchAll"})(xt||(xt={})),function(t){t[t.bestMatch=0]="bestMatch",t[t.fail=1]="fail"}(wt||(wt={}));const ke=6;function R(t){return t!=null&&t.declaredClass==="esri.layers.support.PixelBlock"&&t.pixels&&t.pixels.length>0}function Me(t){var s;if(!(t!=null&&t.length)||t.some(c=>!R(c)))return null;if(t.length===1)return((s=t[0])==null?void 0:s.clone())??null;const e=t,{width:n,height:l,pixelType:a}=e[0];if(e.some(c=>c.width!==n||c.height!==l))return null;const i=e.map(({mask:c})=>c).filter(c=>c!=null);let o=null;i.length&&(o=new Uint8Array(n*l),o.set(i[0]),i.length>1&&$t(i.slice(1),o));const u=[];e.forEach(({pixels:c})=>u.push(...c));const h=e.map(({statistics:c})=>c).filter(c=>c==null?void 0:c.length),r=[];return h.forEach(c=>r.push(...c)),new _({pixelType:a,width:n,height:l,mask:o,pixels:u,statistics:r.length?r:null})}function Ae(t){if(!t)return;const e=t.colormap;if(!e||e.length===0)return;const n=e.sort((c,p)=>c[0]-p[0]);let l=0;n[0][0]<0&&(l=n[0][0]);const a=Math.max(256,n[n.length-1][0]-l+1),i=new Uint8Array(4*a),o=[];let u,h=0,r=0;const s=n[0].length===5;if(a>65536)return n.forEach(c=>{o[c[0]-l]=s?c.slice(1):c.slice(1).concat([255])}),{indexed2DColormap:o,offset:l,alphaSpecified:s};if(t.fillUnspecified)for(u=n[r],h=u[0]-l;h<a;h++)i[4*h]=u[1],i[4*h+1]=u[2],i[4*h+2]=u[3],i[4*h+3]=s?u[4]:255,h===u[0]-l&&(u=r===n.length-1?u:n[++r]);else for(h=0;h<n.length;h++)u=n[h],r=4*(u[0]-l),i[r]=u[1],i[r+1]=u[2],i[r+2]=u[3],i[r+3]=s?u[4]:255;return{indexedColormap:i,offset:l,alphaSpecified:s}}function be(t,e){if(!R(t)||!e||!e.indexedColormap&&!e.indexed2DColormap)return t;const n=t.clone(),l=n.pixels;let a=n.mask;const i=n.width*n.height;if(l.length!==1)return t;const{indexedColormap:o,indexed2DColormap:u,offset:h,alphaSpecified:r}=e;let s=0;const c=l[0],p=new Uint8Array(c.length),f=new Uint8Array(c.length),d=new Uint8Array(c.length);let m,x=0;if(o){const y=o.length-1;if(a!=null)for(s=0;s<i;s++)a[s]&&(x=4*(c[s]-h),x<h||x>y?a[s]=0:(p[s]=o[x],f[s]=o[x+1],d[s]=o[x+2],a[s]=o[x+3]));else{for(a=new Uint8Array(i),s=0;s<i;s++)x=4*(c[s]-h),x<h||x>y?a[s]=0:(p[s]=o[x],f[s]=o[x+1],d[s]=o[x+2],a[s]=o[x+3]);n.mask=a}}else if(u)if(a!=null)for(s=0;s<i;s++)a[s]&&(m=u[c[s]],p[s]=m[0],f[s]=m[1],d[s]=m[2],a[s]=m[3]);else{for(a=new Uint8Array(i),s=0;s<i;s++)m=u[c[s]],p[s]=m[0],f[s]=m[1],d[s]=m[2],a[s]=m[3];n.mask=a}return n.pixels=[p,f,d],n.statistics=null,n.pixelType="u8",n.maskIsAlpha=r,n}function ve(t,e){if(!R(t))return null;const{pixels:n,mask:l}=t,a=n.length;let i=e.lut;const{offset:o}=e;i&&i[0].length===1&&(i=n.map(()=>i));const u=[],h=e.outputPixelType||"u8";for(let s=0;s<a;s++){const c=Pt(n[s],l,i[s],o||0,h);u.push(c)}const r=new _({width:t.width,height:t.height,pixels:u,mask:l,pixelType:h});return r.updateStatistics(),r}function Pt(t,e,n,l,a){const i=t.length,o=_.createEmptyBand(a,i);if(e)for(let u=0;u<i;u++)e[u]&&(o[u]=n[t[u]-l]);else for(let u=0;u<i;u++)o[u]=n[t[u]-l];return o}function Ue(t,e){if(!R(t))return null;const n=t.clone(),{pixels:l}=n,a=n.width*n.height,i=e.length,o=Math.floor(i/2),u=e[Math.floor(o)],h=l[0];let r,s,c,p,f,d,m=!1;const x=new Uint8Array(a),y=new Uint8Array(a),A=new Uint8Array(a);let k=n.mask;const M=e[0].mappedColor.length===4;for(k||(k=new Uint8Array(a),k.fill(M?255:1),n.mask=k),f=0;f<a;f++)if(k[f]){for(r=h[f],m=!1,d=o,s=u,c=0,p=i-1;p-c>1;){if(r===s.value){m=!0;break}r>s.value?c=d:p=d,d=Math.floor((c+p)/2),s=e[Math.floor(d)]}m||(r===e[c].value?(s=e[c],m=!0):r===e[p].value?(s=e[p],m=!0):r<e[c].value?(m=!1,s=null):r>e[c].value&&(r<e[p].value?(s=e[c],m=!0):p===i-1?(m=!1,s=null):(s=e[p],m=!0))),m?(x[f]=s.mappedColor[0],y[f]=s.mappedColor[1],A[f]=s.mappedColor[2],k[f]=s.mappedColor[3]):x[f]=y[f]=A[f]=k[f]=0}return n.pixels=[x,y,A],n.mask=k,n.pixelType="u8",n.maskIsAlpha=M,n}function Pe(t,e){if(!R(t))return null;const{width:n,height:l}=t,{inputRanges:a,outputValues:i,outputPixelType:o,noDataRanges:u,allowUnmatched:h,isLastInputRangeInclusive:r}=e,s=t.pixels[0],c=_.createEmptyBand(o,s.length),p=t.mask,f=new Uint8Array(n*l);p?f.set(p):f.fill(255);const d=t.pixelType.startsWith("f")?1e-6:0,m=a.map(M=>M-d);m[0]=a[0],m[m.length-1]=a[a.length-1]+(r?1e-6:0);const x=a.length/2,[y,A]=ht(o);for(let M=0;M<l;M++)for(let g=0;g<n;g++){const w=M*n+g;if(f[w]){const U=s[w];let b=!1;for(let $=x-1;$>=0;$--)if(U===m[2*$]||U>m[2*$]&&U<m[2*$+1]){c[w]=i[$],b=!0;break}b||(h?c[w]=U>A?A:U<y?y:U:f[w]=0)}}const k=u==null?void 0:u.length;if(k)for(let M=0;M<l;M++)for(let g=0;g<n;g++){const w=M*n+g;if(!p||p[w]){const U=s[w];for(let b=0;b<k;b+=2)if(U>=u[b]&&U<=u[b+1]){c[w]=0,f[w]=0;break}}}return new _({width:n,height:l,pixelType:o,pixels:[c],mask:f})}function yt(t,e,n,l){const a=n!=null&&n.length>=2?new Set(n):null,i=(n==null?void 0:n.length)===1?n[0]:null,o=!!(e!=null&&e.length);for(let u=0;u<t.length;u++)if(l[u]){const h=t[u];if(o){let r=!1;for(let s=0;s<e.length;s+=2)if(h>=e[s]&&h<=e[s+1]){r=!0;break}r||(l[u]=0)}l[u]&&(h===i||a!=null&&a.has(h))&&(l[u]=0)}}function kt(t,e){const n=t[0].length;for(let l=0;l<n;l++)if(e[l]){let a=!1;for(let i=0;i<t.length;i++)if(t[i][l]){a=!0;break}a||(e[l]=0)}}function $t(t,e){const n=t[0].length;for(let l=0;l<n;l++)if(e[l]){let a=!1;for(let i=0;i<t.length;i++)if(t[i][l]===0){a=!0;break}a&&(e[l]=0)}}function $e(t,e){if(!R(t))return null;const{width:n,height:l,pixels:a}=t,i=n*l,o=new Uint8Array(i);t.mask?o.set(t.mask):o.fill(255);const u=a.length,{includedRanges:h,noDataValues:r,outputPixelType:s,matchAll:c,lookups:p}=e;if(p){const f=[];for(let d=0;d<u;d++){const m=p[d],x=Pt(a[d],o,m.lut,m.offset||0,"u8");f.push(x)}f.length===1?o.set(f[0]):c?kt(f,o):$t(f,o)}else if(c){const f=[];for(let d=0;d<u;d++){const m=new Uint8Array(i);m.set(o),yt(a[d],h==null?void 0:h.slice(2*d,2*d+2),r==null?void 0:r[d],m),f.push(m)}f.length===1?o.set(f[0]):kt(f,o)}else for(let f=0;f<u;f++)yt(a[f],h==null?void 0:h.slice(2*f,2*f+2),r==null?void 0:r[f],o);return new _({width:n,height:l,pixelType:s,pixels:a,mask:o})}function Te(t){const{srcPixelType:e,inputRanges:n,outputValues:l,allowUnmatched:a,noDataRanges:i,isLastInputRangeInclusive:o,outputPixelType:u}=t;if(e!=="u8"&&e!=="s8"&&e!=="u16"&&e!=="s16")return null;const h=e.includes("16")?65536:256,r=e.includes("s")?-h/2:0,s=_.createEmptyBand(u,h),c=new Uint8Array(h);a&&c.fill(255);const[p,f]=ht(u);if(n!=null&&n.length&&(l!=null&&l.length)){const m=n.map(x=>x-1e-6);m[0]=n[0],o&&(m[m.length-1]=n[n.length-1]);for(let x=0;x<m.length;x++){const y=l[x]>f?f:l[x]<p?p:l[x],A=Math.ceil(m[2*x]-r),k=Math.floor(m[2*x+1]-r);for(let M=A;M<=k;M++)s[M]=y,c[M]=255}}if(i!=null&&i.length)for(let d=0;d<i.length;d++){const m=Math.ceil(i[2*d]-r),x=Math.floor(i[2*d+1]-r);for(let y=m;y<=x;y++)c[y]=0}return{lut:s,offset:r,mask:c}}function Ie(t,e,n){if(t!=="u8"&&t!=="s8"&&t!=="u16"&&t!=="s16")return null;const l=t.includes("16")?65536:256,a=t.includes("s")?-l/2:0,i=new Uint8Array(l);if(e)for(let o=0;o<e.length;o++){const u=Math.ceil(e[2*o]-a),h=Math.floor(e[2*o+1]-a);for(let r=u;r<=h;r++)i[r]=255}else i.fill(255);if(n)for(let o=0;o<n.length;o++)i[n[o]-a]=0;return{lut:i,offset:a}}function zt(t,e,n,l,a,i,o,u){return{xmin:a<=n*t?0:a<n*t+t?a-n*t:t,ymin:i<=l*e?0:i<l*e+e?i-l*e:e,xmax:a+o<=n*t?0:a+o<n*t+t?a+o-n*t:t,ymax:i+u<=l*e?0:i+u<l*e+e?i+u-l*e:e}}function Be(t,e){if(!t||t.length===0)return null;const n=t.find(d=>d.pixelBlock);if((n==null?void 0:n.pixelBlock)==null)return null;const l=(n.extent.xmax-n.extent.xmin)/n.pixelBlock.width,a=(n.extent.ymax-n.extent.ymin)/n.pixelBlock.height,i=.01*Math.min(l,a),o=t.sort((d,m)=>Math.abs(d.extent.ymax-m.extent.ymax)>i?m.extent.ymax-d.extent.ymax:Math.abs(d.extent.xmin-m.extent.xmin)>i?d.extent.xmin-m.extent.xmin:0),u=Math.min.apply(null,o.map(d=>d.extent.xmin)),h=Math.min.apply(null,o.map(d=>d.extent.ymin)),r=Math.max.apply(null,o.map(d=>d.extent.xmax)),s=Math.max.apply(null,o.map(d=>d.extent.ymax)),c={x:Math.round((e.xmin-u)/l),y:Math.round((s-e.ymax)/a)},p={width:Math.round((r-u)/l),height:Math.round((s-h)/a)},f={width:Math.round((e.xmax-e.xmin)/l),height:Math.round((e.ymax-e.ymin)/a)};return Math.round(p.width/n.pixelBlock.width)*Math.round(p.height/n.pixelBlock.height)!==o.length||c.x<0||c.y<0||p.width<f.width||p.height<f.height?null:{extent:e,pixelBlock:Ht(o.map(d=>d.pixelBlock),p,{clipOffset:c,clipSize:f})}}function ut(t,e,n,l,a,i){const{width:o,height:u}=n.block,{x:h,y:r}=n.offset,{width:s,height:c}=n.mosaic,p=zt(o,u,l,a,h,r,s,c);let f=0,d=0;if(i){const m=i.hasGCSSShiftTransform?360:i.halfWorldWidth??0,x=o*i.resolutionX,y=i.startX+l*x;y<m&&y+x>m?d=i.rightPadding:y>=m&&(f=i.leftMargin-i.rightPadding,d=0)}if(p.xmax-=d,typeof e!="number")for(let m=p.ymin;m<p.ymax;m++){const x=(a*u+m-r)*s+(l*o-h)+f,y=m*o;for(let A=p.xmin;A<p.xmax;A++)t[x+A]=e[y+A]}else for(let m=p.ymin;m<p.ymax;m++){const x=(a*u+m-r)*s+(l*o-h)+f;for(let y=p.xmin;y<p.xmax;y++)t[x+y]=e}}function Ht(t,e,n={}){var T;const{clipOffset:l,clipSize:a,alignmentInfo:i,blockWidths:o}=n;if(o)return Kt(t,e,{blockWidths:o});const u=t.find(P=>R(P));if(u==null)return null;const h=a?a.width:e.width,r=a?a.height:e.height,s=u.width,c=u.height,p=e.width/s,f=e.height/c,d={offset:l||{x:0,y:0},mosaic:a||e,block:{width:s,height:c}},m=u.pixelType,x=_.getPixelArrayConstructor(m),y=u.pixels.length,A=[];let k,M;for(let P=0;P<y;P++){M=new x(h*r);for(let v=0;v<f;v++)for(let B=0;B<p;B++){const C=t[v*p+B];R(C)&&(k=C.pixels[P],ut(M,k,d,B,v,i))}A.push(M)}const g=t.some(P=>P==null||P.mask!=null&&P.mask.length>0),w=t.some(P=>(P==null?void 0:P.bandMasks)&&P.bandMasks.length>1),U=g?new Uint8Array(h*r):void 0,b=w?[]:void 0;if(U){for(let P=0;P<f;P++)for(let v=0;v<p;v++){const B=t[P*p+v],C=B!=null?B.mask:null;ut(U,C??(B?255:0),d,v,P,i)}if(b)for(let P=0;P<y;P++){const v=new Uint8Array(h*r);for(let B=0;B<f;B++)for(let C=0;C<p;C++){const S=t[B*p+C],I=((T=S==null?void 0:S.bandMasks)==null?void 0:T[P])??(S==null?void 0:S.mask);ut(v,I??(S?255:0),d,C,B,i)}b.push(v)}}const $=new _({width:h,height:r,pixels:A,pixelType:m,bandMasks:b,mask:U});return $.updateStatistics(),$}function Kt(t,e,n){var x;const l=t.find(y=>y!=null);if(l==null)return null;const a=t.some(y=>y==null||!!y.mask),{width:i,height:o}=e,u=a?new Uint8Array(i*o):null,{blockWidths:h}=n,r=[],s=l.getPlaneCount(),c=_.getPixelArrayConstructor(l.pixelType);if(a)for(let y=0,A=0;y<t.length;A+=h[y],y++){const k=t[y];if(!R(k))continue;const M=k.mask;for(let g=0;g<o;g++)for(let w=0;w<h[y];w++)u[g*i+w+A]=M==null?255:M[g*k.width+w]}const p=t.some(y=>(y==null?void 0:y.bandMasks)&&y.bandMasks.length>1),f=p?[]:void 0,d=i*o;for(let y=0;y<s;y++){const A=new c(d),k=p?new Uint8Array(d):void 0;for(let M=0,g=0;M<t.length;g+=h[M],M++){const w=t[M];if(!R(w))continue;const U=w.pixels[y];if(U!=null){for(let b=0;b<o;b++)for(let $=0;$<h[M];$++)A[b*i+$+g]=U[b*w.width+$];if(k){const b=((x=w.bandMasks)==null?void 0:x[y])??w.mask;for(let $=0;$<o;$++)for(let T=0;T<h[M];T++)k[$*i+T+g]=b?b[$*w.width+T]:255}}}r.push(A),f&&k&&f.push(k)}const m=new _({width:i,height:o,mask:u,bandMasks:f,pixels:r,pixelType:l.pixelType});return m.updateStatistics(),m}function Se(t,e,n){if(!R(t))return null;const{width:l,height:a}=t,i=e.x,o=e.y,u=n.width+i,h=n.height+o;if(i<0||o<0||u>l||h>a||i===0&&o===0&&u===l&&h===a)return t;t.mask||(t.mask=new Uint8Array(l*a));const r=t.mask;for(let s=0;s<a;s++){const c=s*l;for(let p=0;p<l;p++)r[c+p]=s<o||s>=h||p<i||p>=u?0:1}return t.updateStatistics(),t}function Yt(t){if(!R(t))return null;const e=t.clone(),{width:n,height:l,pixels:a}=t,i=a[0],o=e.pixels[0],u=t.mask;for(let h=2;h<l-1;h++){const r=new Map;for(let c=h-2;c<h+2;c++)for(let p=0;p<4;p++){const f=c*n+p;lt(r,i[f],u?u[f]:1)}o[h*n]=Mt(r),o[h*n+1]=o[h*n+2]=o[h*n];let s=3;for(;s<n-1;s++){let c=(h-2)*n+s+1;lt(r,i[c],u?u[c]:1),c=(h-1)*n+s+1,lt(r,i[c],u?u[c]:1),c=h*n+s+1,lt(r,i[c],u?u[c]:1),c=(h+1)*n+s+1,lt(r,i[c],u?u[c]:1),c=(h-2)*n+s-3,rt(r,i[c],u?u[c]:1),c=(h-1)*n+s-3,rt(r,i[c],u?u[c]:1),c=h*n+s-3,rt(r,i[c],u?u[c]:1),c=(h+1)*n+s-3,rt(r,i[c],u?u[c]:1),o[h*n+s]=Mt(r)}o[h*n+s+1]=o[h*n+s]}for(let h=0;h<n;h++)o[h]=o[n+h]=o[2*n+h],o[(l-1)*n+h]=o[(l-2)*n+h];return e.updateStatistics(),e}function Mt(t){if(t.size===0)return 0;let e=0,n=-1,l=0;const a=t.keys();let i=a.next();for(;!i.done;)l=t.get(i.value),l>e&&(n=i.value,e=l),i=a.next();return n}function rt(t,e,n){if(n===0)return;const l=t.get(e);l===1?t.delete(e):t.set(e,l-1)}function lt(t,e,n){n!==0&&t.set(e,t.has(e)?t.get(e)+1:1)}function Tt(t,e,n){let{x:l,y:a}=e;const{width:i,height:o}=n;if(l===0&&a===0&&o===t.height&&i===t.width)return t;const{width:u,height:h}=t,r=Math.max(0,a),s=Math.max(0,l),c=Math.min(l+i,u),p=Math.min(a+o,h);if(c<0||p<0||!R(t))return null;l=Math.max(0,-l),a=Math.max(0,-a);const{pixels:f}=t,d=i*o,m=f.length,x=[];for(let M=0;M<m;M++){const g=f[M],w=_.createEmptyBand(t.pixelType,d);for(let U=r;U<p;U++){const b=U*u;let $=(U+a-r)*i+l;for(let T=s;T<c;T++)w[$++]=g[b+T]}x.push(w)}const y=new Uint8Array(d),A=t.mask;for(let M=r;M<p;M++){const g=M*u;let w=(M+a-r)*i+l;for(let U=s;U<c;U++)y[w++]=A?A[g+U]:1}const k=new _({width:n.width,height:n.height,pixelType:t.pixelType,pixels:x,mask:y});return k.updateStatistics(),k}function It(t,e=!0){if(!R(t))return null;const{pixels:n,width:l,height:a,mask:i,pixelType:o}=t,u=[],h=Math.round(l/2),r=Math.round(a/2),s=a-1,c=l-1;for(let f=0;f<n.length;f++){const d=n[f],m=_.createEmptyBand(o,h*r);let x=0;for(let y=0;y<a;y+=2)for(let A=0;A<l;A+=2){const k=d[y*l+A];if(e){const M=A===c?k:d[y*l+A+1],g=y===s?k:d[y*l+A+l],w=A===c?g:y===s?M:d[y*l+A+l+1];m[x++]=(k+M+g+w)/4}else m[x++]=k}u.push(m)}let p=null;if(i!=null){p=new Uint8Array(h*r);let f=0;for(let d=0;d<a;d+=2)for(let m=0;m<l;m+=2){const x=i[d*l+m];if(e){const y=m===c?x:i[d*l+m+1],A=d===s?x:i[d*l+m+l],k=m===c?A:d===s?y:i[d*l+m+l+1];p[f++]=x*y*A*k?1:0}else p[f++]=x}}return new _({width:h,height:r,pixelType:o,pixels:u,mask:p})}function Ce(t,e,n=0,l=!0){if(!R(t))return null;const{width:a,height:i}=e;let{width:o,height:u}=t;const h=new Map,r={x:0,y:0},s=1+n;let c=t;for(let p=0;p<s;p++){const f=Math.ceil(o/a),d=Math.ceil(u/i);for(let m=0;m<d;m++){r.y=m*i;for(let x=0;x<f;x++){r.x=x*a;const y=Tt(c,r,e);h.set(`${p}/${m}/${x}`,y)}}p<s-1&&(c=It(c,l)),o=Math.round(o/2),u=Math.round(u/2)}return h}function Fe(t){const{pixelBlock:e,tileSize:n,level:l,row:a,col:i,useBilinear:o}=t;if(!R(e))return null;const{width:u,height:h}=n,r=2**l,s=r*u,c=r*h;let p=Tt(e,{y:a*c,x:i*s},{width:s,height:c});if(!p)return null;for(let f=l;f>0;f--)p=It(p,o);return p}function Bt(t,e,n,l,a=0){const{width:i,height:o}=t,{width:u,height:h}=e,r=l.cols,s=l.rows,c=Math.ceil(u/r-.1/r),p=Math.ceil(h/s-.1/s);let f,d,m,x,y,A,k;const M=c*r,g=M*p*s,w=new Float32Array(g),U=new Float32Array(g),b=new Uint32Array(g),$=new Uint32Array(g);let T,P,v=0;for(let B=0;B<p;B++)for(let C=0;C<c;C++){f=12*(B*c+C),d=n[f],m=n[f+1],x=n[f+2],y=n[f+3],A=n[f+4],k=n[f+5];for(let S=0;S<s;S++){v=(B*s+S)*M+C*r,P=(S+.5)/s;for(let I=0;I<S;I++)T=(I+.5)/r,w[v+I]=(d*T+m*P+x)*i+a,U[v+I]=(y*T+A*P+k)*o+a,b[v+I]=Math.floor(w[v+I]),$[v+I]=Math.floor(U[v+I])}f+=6,d=n[f],m=n[f+1],x=n[f+2],y=n[f+3],A=n[f+4],k=n[f+5];for(let S=0;S<s;S++){v=(B*s+S)*M+C*r,P=(S+.5)/s;for(let I=S;I<r;I++)T=(I+.5)/r,w[v+I]=(d*T+m*P+x)*i+a,U[v+I]=(y*T+A*P+k)*o+a,b[v+I]=Math.floor(w[v+I]),$[v+I]=Math.floor(U[v+I])}}return{offsets_x:w,offsets_y:U,offsets_xi:b,offsets_yi:$,gridWidth:M}}function Ve(t,e){const{coefficients:n,spacing:l}=e,{offsets_x:a,offsets_y:i,gridWidth:o}=Bt(t,t,n,{rows:l[0],cols:l[1]}),{width:u,height:h}=t,r=new Float32Array(u*h),s=180/Math.PI;for(let c=0;c<h;c++)for(let p=0;p<u;p++){const f=c*o+p,d=c===0?f:f-o,m=c===h-1?f:f+o,x=a[d]-a[m],y=i[m]-i[d];if(isNaN(x)||isNaN(y))r[c*u+p]=90;else{let A=Math.atan2(y,x)*s;A=(360+A)%360,r[c*u+p]=A}}return r}function _e(t,e,n,l,a="nearest"){if(!R(t))return null;a==="majority"&&(t=Yt(t));const{pixels:i,mask:o,bandMasks:u,pixelType:h}=t,r=t.width,s=t.height,c=_.getPixelArrayConstructor(h),p=i.length,{width:f,height:d}=e;let m=!1;for(let v=0;v<n.length;v+=3)n[v]===-1&&n[v+1]===-1&&n[v+2]===-1&&(m=!0);const{offsets_x:x,offsets_y:y,offsets_xi:A,offsets_yi:k,gridWidth:M}=Bt({width:r,height:s},e,n,l,a==="majority"?.5:0);let g;const w=(v,B,C,S)=>{const I=v instanceof Float32Array||v instanceof Float64Array?0:.5;for(let F=0;F<d;F++){g=F*M;for(let V=0;V<f;V++){if(x[g]<0||y[g]<0)v[F*f+V]=0;else if(S)v[F*f+V]=B[A[g]+k[g]*r];else{const E=Math.floor(x[g]),q=Math.floor(y[g]),L=Math.ceil(x[g]),G=Math.ceil(y[g]),J=x[g]-E,H=y[g]-q;if(!C||C[E+q*r]&&C[L+q*r]&&C[E+G*r]&&C[L+G*r]){const et=(1-J)*B[E+q*r]+J*B[L+q*r],Y=(1-J)*B[E+G*r]+J*B[L+G*r];v[F*f+V]=(1-H)*et+H*Y+I}else v[F*f+V]=B[A[g]+k[g]*r]}g++}}},U=[];let b;const $=(u==null?void 0:u.length)===p,T=[];for(let v=0;v<p;v++){if($){const B=new Uint8Array(f*d);w(B,u[v],u[v],!0),T.push(B)}b=new c(f*d),w(b,i[v],$?u[v]:o,a==="nearest"||a==="majority"),U.push(b)}const P=new _({width:f,height:d,pixelType:h,pixels:U,bandMasks:$?T:void 0});if(o!=null)P.mask=new Uint8Array(f*d),w(P.mask,o,o,!0);else if(m){P.mask=new Uint8Array(f*d);for(let v=0;v<f*d;v++)P.mask[v]=x[v]<0||y[v]<0?0:1}return P.updateStatistics(),P}const tt=new Map;tt.set("meter-per-second",1),tt.set("kilometer-per-hour",.277778),tt.set("knots",.514444),tt.set("feet-per-second",.3048),tt.set("mile-per-hour",.44704);const pt=180/Math.PI,dt=5,at=new Et({esriMetersPerSecond:"meter-per-second",esriKilometersPerHour:"kilometer-per-hour",esriKnots:"knots",esriFeetPerSecond:"feet-per-second",esriMilesPerHour:"mile-per-hour"});function mt(t,e){return tt.get(t)/tt.get(e)||1}function St(t){return(450-t)%360}function Ct(t,e="geographic"){const[n,l]=t,a=Math.sqrt(n*n+l*l);let i=Math.atan2(l,n)*pt;return i=(360+i)%360,e==="geographic"&&(i=St(i)),[a,i]}function Qt(t,e="geographic"){let n=t[1];e==="geographic"&&(n=St(n)),n%=360;const l=t[0];return[l*Math.cos(n/pt),l*Math.sin(n/pt)]}function De(t,e,n,l="geographic"){if(!R(t)||n==null)return t;const a=e==="vector-magdir"?t.clone():At(t,e),i=a.pixels[1];for(let o=0;o<i.length;o++)i[o]=l==="geographic"?(i[o]+n[o]+270)%360:(i[o]+360-n[o])%360;return e==="vector-magdir"?a:At(a,"vector-magdir")}function At(t,e,n="geographic",l=1){if(!R(t))return t;const{pixels:a,width:i,height:o}=t,u=i*o,h=a[0],r=a[1],s=t.pixelType.startsWith("f")?t.pixelType:"f32",c=_.createEmptyBand(s,u),p=_.createEmptyBand(s,u);let f=0;for(let m=0;m<o;m++)for(let x=0;x<i;x++)e==="vector-uv"?([c[f],p[f]]=Ct([h[f],r[f]],n),c[f]*=l):([c[f],p[f]]=Qt([h[f],r[f]],n),c[f]*=l,p[f]*=l),f++;const d=new _({pixelType:s,width:t.width,height:t.height,mask:t.mask,validPixelCount:t.validPixelCount,maskIsAlpha:t.maskIsAlpha,pixels:[c,p]});return d.updateStatistics(),d}function Re(t,e,n=1){if(n===1||!R(t))return t;const l=t.clone(),{pixels:a,width:i,height:o}=l,u=a[0];a[1];let h=0;for(let r=0;r<o;r++)for(let s=0;s<i;s++)u[h]*=n,h++;return l.updateStatistics(),l}function Le(t,e,n,l,a){if(a==null||!a.spatialReference.equals(t.spatialReference))return{extent:t,width:Math.round(e/l),height:Math.round(n/l),resolution:t.width/e};const i=a.xmin,o=a.ymax,u=(t.xmax-t.xmin)/e*l,h=(t.ymax-t.ymin)/n*l,r=(u+h)/2;return t.xmin=i+Math.floor((t.xmin-i)/u)*u,t.xmax=i+Math.ceil((t.xmax-i)/u)*u,t.ymin=o+Math.floor((t.ymin-o)/h)*h,t.ymax=o+Math.ceil((t.ymax-o)/h)*h,{extent:t,width:Math.round(t.width/u),height:Math.round(t.height/h),resolution:r}}const Zt=Ft(0,0,0);function Ft(t=0,e=0,n=Math.PI,l=!0){l&&(n=(2*Math.PI-n)%(2*Math.PI));const a=l?-1:1,i=13*a,o=-7*a,u=-2*a,h=-16*a,r=21.75,[s,c]=j(0,e+i,n,r),[p,f]=j(t-5.5,e+o,n,r),[d,m]=j(t+5.5,e+o,n,r),[x,y]=j(t-1.5,e+u,n,r),[A,k]=j(t+1.5,e+u,n,r),[M,g]=j(t-1.5,e+h,n,r),[w,U]=j(t+1.5,e+h,n,r);return[s,c,p,f,x,y,A,k,d,m,M,g,w,U]}function te(t=0,e=Math.PI,n=!0){n&&(e=(2*Math.PI-e)%(2*Math.PI));const l=10,a=n?-1:1,i=5*a,o=20*a,u=25*a,h=45,r=0,s=0,c=2,p=0,f=c*a,d=n?1:-1,m=l/2*d;let[x,y]=[r+m,s-o],[A,k]=[x+c*d,y],[M,g]=[A-p*d,k+f],[w,U]=[r-m,s-u],[b,$]=[w+p*d,U-f],T=Math.ceil(t/dt),P=Math.floor(T/10);T-=8*P;const v=[],B=[];for(let J=0;J<T/2;J++,P--){P<=0&&T%2==1&&J===(T-1)/2&&(w=r,b=w+p*d,U=(U+y)/2,$=U-f);const[H,et]=j(w,U,e,h);if(P>0){const[Y,it]=j(A,U,e,h),[st,D]=j(x,y,e,h);v.push(Y),v.push(it),v.push(H),v.push(et),v.push(st),v.push(D)}else{const[Y,it]=j(A,k,e,h),[st,D]=j(M,g,e,h),[N,ct]=j(b,$,e,h);B.push(H),B.push(et),B.push(N),B.push(ct),B.push(st),B.push(D),B.push(Y),B.push(it)}U+=i,y+=i,k+=i,g+=i,$+=i}const[C,S]=j(r+m,s+o,e,h),I=(l/2+c)*d,[F,V]=j(r+I,s+o,e,h),[E,q]=j(r+m,s-u,e,h),[L,G]=j(r+I,s-u,e,h);return{pennants:v,barbs:B,shaft:[C,S,F,V,E,q,L,G]}}function j(t,e,n,l=1){const a=Math.sqrt(t*t+e*e)/l,i=(2*Math.PI+Math.atan2(e,t))%(2*Math.PI);return[a,(2*Math.PI+i-n)%(2*Math.PI)]}const ot=[0,1,3,6,10,16,21,27,33,40,47,55,63],ee=[0,.5,1,1.5,2],ne=[0,.25,.5,1,1.5,2,2.5,3,3.5,4];function Q(t,e,n,l){const a=mt(l||"knots",n);let i;for(i=1;i<e.length;i++)if(i===e.length-1){if(t<e[i]*a)break}else if(t<=e[i]*a)break;return Math.min(i-1,e.length-2)}function ie(t,e,n,l,a){let i=0;switch(e){case"beaufort_kn":i=Q(t,ot,"knots",n);break;case"beaufort_km":i=Q(t,ot,"kilometer-per-hour",n);break;case"beaufort_ft":i=Q(t,ot,"feet-per-second",n);break;case"beaufort_m":i=Q(t,ot,"meter-per-second",n);break;case"classified_arrow":i=Q(t,a??[],l,n);break;case"ocean_current_m":i=Q(t,ee,"meter-per-second",n);break;case"ocean_current_kn":i=Q(t,ne,"knots",n)}return i}function se(t,e){const{style:n,inputUnit:l,outputUnit:a,breakValues:i}=e,o=at.fromJSON(l),u=at.fromJSON(a),h=7*6,r=15;let s=0,c=0;const{width:p,height:f,mask:d}=t,m=t.pixels[0],x=t.pixels[1],y=d!=null?d.filter(g=>g>0).length:p*f,A=new Float32Array(y*h),k=new Uint32Array(r*y),M=e.invertDirection?Ft(0,0,0,!1):Zt;for(let g=0;g<f;g++)for(let w=0;w<p;w++){const U=g*p+w;if(!d||d[g*p+w]){const b=(x[U]+360)%360/180*Math.PI,$=ie(m[U],n,o,u,i);for(let P=0;P<M.length;P+=2)A[s++]=(w+.5)/p,A[s++]=(g+.5)/f,A[s++]=M[P],A[s++]=M[P+1]+b,A[s++]=$,A[s++]=m[U];const T=7*(s/h-1);k[c++]=T,k[c++]=T+1,k[c++]=T+2,k[c++]=T+0,k[c++]=T+4,k[c++]=T+3,k[c++]=T+0,k[c++]=T+2,k[c++]=T+3,k[c++]=T+2,k[c++]=T+5,k[c++]=T+3,k[c++]=T+5,k[c++]=T+6,k[c++]=T+3}}return{vertexData:A,indexData:k}}const ft=[];function le(t,e){if(ft.length===0)for(let f=0;f<30;f++)ft.push(te(5*f,0,!e.invertDirection));const n=mt(at.fromJSON(e.inputUnit),"knots"),{width:l,height:a,mask:i}=t,o=t.pixels[0],u=t.pixels[1],h=6,r=[],s=[];let c=0,p=0;for(let f=0;f<a;f++)for(let d=0;d<l;d++){const m=f*l+d,x=o[m]*n;if((!i||i[f*l+d])&&x>=dt){const y=(u[m]+360)%360/180*Math.PI,{pennants:A,barbs:k,shaft:M}=ft[Math.min(Math.floor(x/5),29)];if(A.length+k.length===0)continue;let g=r.length/h;const w=(d+.5)/l,U=(f+.5)/a;for(let b=0;b<A.length;b+=2)r[c++]=w,r[c++]=U,r[c++]=A[b],r[c++]=A[b+1]+y,r[c++]=0,r[c++]=x;for(let b=0;b<k.length;b+=2)r[c++]=w,r[c++]=U,r[c++]=k[b],r[c++]=k[b+1]+y,r[c++]=0,r[c++]=x;for(let b=0;b<M.length;b+=2)r[c++]=w,r[c++]=U,r[c++]=M[b],r[c++]=M[b+1]+y,r[c++]=0,r[c++]=x;for(let b=0;b<A.length/6;b++)s[p++]=g,s[p++]=g+1,s[p++]=g+2,g+=3;for(let b=0;b<k.length/8;b++)s[p++]=g,s[p++]=g+1,s[p++]=g+2,s[p++]=g+1,s[p++]=g+2,s[p++]=g+3,g+=4;s[p++]=g+0,s[p++]=g+1,s[p++]=g+2,s[p++]=g+1,s[p++]=g+3,s[p++]=g+2,g+=4}}return{vertexData:new Float32Array(r),indexData:new Uint32Array(s)}}function re(t,e){let l=0,a=0;const{width:i,height:o,mask:u}=t,h=t.pixels[0],r=[],s=[],c=mt(at.fromJSON(e.inputUnit),"knots"),p=e.style==="wind_speed"?dt:Number.MAX_VALUE;for(let f=0;f<o;f++)for(let d=0;d<i;d++){const m=h[f*i+d]*c;if((!u||u[f*i+d])&&m<p){for(let y=0;y<4;y++)r[l++]=(d+.5)/i,r[l++]=(f+.5)/o,r[l++]=y<2?-.5:.5,r[l++]=y%2==0?-.5:.5,r[l++]=0,r[l++]=m;const x=4*(l/24-1);s[a++]=x,s[a++]=x+1,s[a++]=x+2,s[a++]=x+1,s[a++]=x+2,s[a++]=x+3}}return{vertexData:new Float32Array(r),indexData:new Uint32Array(s)}}function Ne(t,e){return e.style==="simple_scalar"?re(t,e):e.style==="wind_speed"?le(t,e):se(t,e)}function Ee(t,e,n,l=[0,0],a=.5){const{width:i,height:o,mask:u}=t,[h,r]=t.pixels,[s,c]=l,p=Math.round((i-s)/n),f=Math.round((o-c)/n),d=p*f,m=new Float32Array(d),x=new Float32Array(d),y=new Uint8Array(d);for(let k=0;k<f;k++)for(let M=0;M<p;M++){let g=0;const w=k*p+M,U=Math.max(0,k*n+c),b=Math.max(0,M*n+s),$=Math.min(o,U+n),T=Math.min(i,b+n);for(let P=U;P<$;P++)for(let v=b;v<T;v++){const B=P*i+v;if(!u||u[B]){g++;const C=[h[B],r[B]],[S,I]=C;m[w]+=S,x[w]+=I}}if(g>=($-U)*(T-b)*(1-a)){y[w]=1;const[P,v]=Ct([m[w]/g,x[w]/g]);m[w]=P,x[w]=v}else y[w]=0,m[w]=0,x[w]=0}const A=new _({width:p,height:f,pixels:[m,x],mask:y});return A.updateStatistics(),A}const z=()=>Z.getLogger("esri.views.2d.engine.flow.dataUtils"),oe=10;async function je(t,e,n,l){const a=performance.now(),i=ae(e,n),o=performance.now(),u=ce(e,i,n.width,n.height),h=performance.now(),r=fe(u),s=performance.now(),c=t==="Streamlines"?pe(r,oe):de(r),p=performance.now();return nt("esri-2d-profiler")&&(z().info("I.1","_createFlowFieldFromData (ms)",Math.round(o-a)),z().info("I.2","_getStreamlines (ms)",Math.round(h-o)),z().info("I.3","createAnimatedLinesData (ms)",Math.round(s-h)),z().info("I.4","create{Streamlines|Particles}Mesh (ms)",Math.round(p-s)),z().info("I.5","createFlowMesh (ms)",Math.round(p-a)),z().info("I.6","Mesh size (bytes)",c.vertexData.buffer.byteLength+c.indexData.buffer.byteLength)),await Promise.resolve(),jt(l),c}function ae(t,e){const n=ue(e.data,e.width,e.height,t.smoothing);return t.interpolate?(l,a)=>{const i=Math.floor(l),o=Math.floor(a);if(i<0||i>=e.width)return[0,0];if(o<0||o>=e.height)return[0,0];const u=l-i,h=a-o,r=i,s=o,c=i<e.width-1?i+1:i,p=o<e.height-1?o+1:o,f=n[2*(s*e.width+r)],d=n[2*(s*e.width+c)],m=n[2*(p*e.width+r)],x=n[2*(p*e.width+c)],y=n[2*(s*e.width+r)+1],A=n[2*(s*e.width+c)+1];return[(f*(1-h)+m*h)*(1-u)+(d*(1-h)+x*h)*u,(y*(1-h)+n[2*(p*e.width+r)+1]*h)*(1-u)+(A*(1-h)+n[2*(p*e.width+c)+1]*h)*u]}:(l,a)=>{const i=Math.round(l),o=Math.round(a);return i<0||i>=e.width||o<0||o>=e.height?[0,0]:[n[2*(o*e.width+i)],n[2*(o*e.width+i)+1]]}}function he(t,e,n,l,a,i,o,u,h){const r=[];let s=n,c=l,p=0,[f,d]=e(s,c);f*=t.velocityScale,d*=t.velocityScale;const m=Math.sqrt(f*f+d*d);let x,y;r.push({x:s,y:c,t:p,speed:m});for(let A=0;A<t.verticesPerLine;A++){let[k,M]=e(s,c);k*=t.velocityScale,M*=t.velocityScale;const g=Math.sqrt(k*k+M*M);if(g<t.minSpeedThreshold)return r;const w=k/g,U=M/g;if(s+=w*t.segmentLength,c+=U*t.segmentLength,p+=t.segmentLength/g,Math.acos(w*x+U*y)>t.maxTurnAngle)return r;if(t.collisions){const b=Math.round(s*h),$=Math.round(c*h);if(b<0||b>o-1||$<0||$>u-1)return r;const T=i[$*o+b];if(T!==-1&&T!==a)return r;i[$*o+b]=a}r.push({x:s,y:c,t:p,speed:g}),x=w,y=U}return r}function ce(t,e,n,l){const a=[],i=new Ut,o=1/Math.max(t.lineCollisionWidth,1),u=Math.round(n*o),h=Math.round(l*o),r=new Int32Array(u*h);for(let c=0;c<r.length;c++)r[c]=-1;const s=[];for(let c=0;c<l;c+=t.lineSpacing)for(let p=0;p<n;p+=t.lineSpacing)s.push({x:p,y:c,sort:i.getFloat()});s.sort((c,p)=>c.sort-p.sort);for(const{x:c,y:p}of s)if(i.getFloat()<t.density){const f=he(t,e,c,p,a.length,r,u,h,o);if(f.length<2)continue;a.push(f)}return a}function ue(t,e,n,l){if(l===0)return t;const a=Math.round(3*l),i=new Array(2*a+1);let o=0;for(let r=-a;r<=a;r++){const s=Math.exp(-r*r/(l*l));i[r+a]=s,o+=s}for(let r=-a;r<=a;r++)i[r+a]/=o;const u=new Float32Array(t.length);for(let r=0;r<n;r++)for(let s=0;s<e;s++){let c=0,p=0;for(let f=-a;f<=a;f++){if(s+f<0||s+f>=e)continue;const d=i[f+a];c+=d*t[2*(r*e+(s+f))],p+=d*t[2*(r*e+(s+f))+1]}u[2*(r*e+s)]=c,u[2*(r*e+s)+1]=p}const h=new Float32Array(t.length);for(let r=0;r<e;r++)for(let s=0;s<n;s++){let c=0,p=0;for(let f=-a;f<=a;f++){if(s+f<0||s+f>=n)continue;const d=i[f+a];c+=d*u[2*((s+f)*e+r)],p+=d*u[2*((s+f)*e+r)+1]}h[2*(s*e+r)]=c,h[2*(s*e+r)+1]=p}return h}function fe(t,e){const n=new Ut,l=t.reduce((h,r)=>h+r.length,0),a=new Float32Array(4*l),i=new Array(t.length);let o=0,u=0;for(const h of t){const r=o;for(const s of h)a[4*o]=s.x,a[4*o+1]=s.y,a[4*o+2]=s.t,a[4*o+3]=s.speed,o++;i[u++]={startVertex:r,numberOfVertices:h.length,totalTime:h[h.length-1].t,timeSeed:n.getFloat()}}return{lineVertices:a,lineDescriptors:i}}function pe(t,e){const{lineVertices:l,lineDescriptors:a}=t;let i=0,o=0;for(const f of a)i+=2*f.numberOfVertices,o+=6*(f.numberOfVertices-1);const u=new Float32Array(i*9),h=new Uint32Array(o);let r=0,s=0;function c(){h[s++]=r-2,h[s++]=r,h[s++]=r-1,h[s++]=r,h[s++]=r+1,h[s++]=r-1}function p(f,d,m,x,y,A,k,M){const g=r*9;let w=0;u[g+w++]=f,u[g+w++]=d,u[g+w++]=1,u[g+w++]=m,u[g+w++]=A,u[g+w++]=k,u[g+w++]=x/2,u[g+w++]=y/2,u[g+w++]=M,r++,u[g+w++]=f,u[g+w++]=d,u[g+w++]=-1,u[g+w++]=m,u[g+w++]=A,u[g+w++]=k,u[g+w++]=-x/2,u[g+w++]=-y/2,u[g+w++]=M,r++}for(const f of a){const{totalTime:d,timeSeed:m}=f;let x=null,y=null,A=null,k=null,M=null,g=null;for(let w=0;w<f.numberOfVertices;w++){const U=l[4*(f.startVertex+w)],b=l[4*(f.startVertex+w)+1],$=l[4*(f.startVertex+w)+2],T=l[4*(f.startVertex+w)+3];let P=null,v=null,B=null,C=null;if(w>0){P=U-x,v=b-y;const S=Math.sqrt(P*P+v*v);if(P/=S,v/=S,w>1){let I=P+M,F=v+g;const V=Math.sqrt(I*I+F*F);I/=V,F/=V;const E=Math.min(1/(I*P+F*v),e);I*=E,F*=E,B=-F,C=I}else B=-v,C=P;B!==null&&C!==null&&(p(x,y,A,B,C,d,m,T),c())}x=U,y=b,A=$,M=P,g=v,k=T}p(x,y,A,-g,M,d,m,k)}return{vertexData:u,indexData:h}}function de(t){const{lineVertices:a,lineDescriptors:i}=t;let o=0,u=0;for(const S of i){const I=S.numberOfVertices-1;o+=4*I*2,u+=6*I*2}const h=new Float32Array(o*16),r=new Uint32Array(u);let s,c,p,f,d,m,x,y,A,k,M,g,w,U,b=0,$=0;function T(){r[$++]=b-8,r[$++]=b-7,r[$++]=b-6,r[$++]=b-7,r[$++]=b-5,r[$++]=b-6,r[$++]=b-4,r[$++]=b-3,r[$++]=b-2,r[$++]=b-3,r[$++]=b-1,r[$++]=b-2}function P(S,I,F,V,E,q,L,G,J,H,et,Y,it,st){const D=b*16;let N=0;for(const ct of[1,2])for(const Vt of[1,2,3,4])h[D+N++]=S,h[D+N++]=I,h[D+N++]=F,h[D+N++]=V,h[D+N++]=L,h[D+N++]=G,h[D+N++]=J,h[D+N++]=H,h[D+N++]=ct,h[D+N++]=Vt,h[D+N++]=it,h[D+N++]=st,h[D+N++]=E/2,h[D+N++]=q/2,h[D+N++]=et/2,h[D+N++]=Y/2,b++}function v(S,I){let F=A+M,V=k+g;const E=Math.sqrt(F*F+V*V);F/=E,V/=E;const q=A*F+k*V;F/=q,V/=q;let L=M+w,G=g+U;const J=Math.sqrt(L*L+G*G);L/=J,G/=J;const H=M*L+g*G;L/=H,G/=H,P(s,c,p,f,-V,F,d,m,x,y,-G,L,S,I),T()}function B(S,I,F,V,E,q){if(A=M,k=g,M=w,g=U,A==null&&k==null&&(A=M,k=g),d!=null&&m!=null){w=S-d,U=I-m;const L=Math.sqrt(w*w+U*U);w/=L,U/=L}A!=null&&k!=null&&v(E,q),s=d,c=m,p=x,f=y,d=S,m=I,x=F,y=V}function C(S,I){A=M,k=g,M=w,g=U,A==null&&k==null&&(A=M,k=g),A!=null&&k!=null&&v(S,I)}for(const S of i){s=null,c=null,p=null,f=null,d=null,m=null,x=null,y=null,A=null,k=null,M=null,g=null,w=null,U=null;const{totalTime:I,timeSeed:F}=S;for(let V=0;V<S.numberOfVertices;V++)B(a[4*(S.startVertex+V)],a[4*(S.startVertex+V)+1],a[4*(S.startVertex+V)+2],a[4*(S.startVertex+V)+3],I,F);C(I,F)}return{vertexData:h,indexData:r}}function bt(t,e){const n=e.pixels,{width:l,height:a}=e,i=new Float32Array(l*a*2),o=e.mask||new Uint8Array(l*a*2);if(e.mask||o.fill(255),t==="vector-uv")for(let u=0;u<l*a;u++)i[2*u]=n[0][u],i[2*u+1]=-n[1][u];else if(t==="vector-magdir")for(let u=0;u<l*a;u++){const h=n[0][u],r=qt(n[1][u]),s=Math.cos(r-Math.PI/2),c=Math.sin(r-Math.PI/2);i[2*u]=s*h,i[2*u+1]=c*h}return{data:i,mask:o,width:l,height:a}}async function Oe(t,e,n,l,a,i){const o=performance.now(),u=Ot(e.spatialReference);if(!u){const M=await vt(t,e,n,l,a,i);return nt("esri-2d-profiler")&&z().info("I.7","loadImagery, early exit (ms)",Math.round(performance.now()-o)),nt("esri-2d-profiler")&&z().info("I.9","Number of parts",1),M}const[h,r]=u.valid,s=r-h,c=Math.ceil(e.width/s),p=e.width/c,f=Math.round(n/c);let d=e.xmin;const m=[],x=performance.now();for(let M=0;M<c;M++){const g=new Gt({xmin:d,xmax:d+p,ymin:e.ymin,ymax:e.ymax,spatialReference:e.spatialReference});m.push(vt(t,g,f,l,a,i)),d+=p}const y=await Promise.all(m);nt("esri-2d-profiler")&&z().info("I.8","All calls to _fetchPart (ms)",Math.round(performance.now()-x)),nt("esri-2d-profiler")&&z().info("I.9","Number of parts",y.length);const A={data:new Float32Array(n*l*2),mask:new Uint8Array(n*l),width:n,height:l};let k=0;for(const M of y){for(let g=0;g<M.height;g++)for(let w=0;w<M.width;w++)k+w>=n||(A.data[2*(g*n+k+w)]=M.data[2*(g*M.width+w)],A.data[2*(g*n+k+w)+1]=M.data[2*(g*M.width+w)+1],A.mask[g*n+k+w]=M.mask[g*M.width+w]);k+=M.width}return nt("esri-2d-profiler")&&z().info("I.10","loadImagery, general exit (ms)",Math.round(performance.now()-o)),A}async function vt(t,e,n,l,a,i){var r;const o={requestProjectedLocalDirections:!0,signal:i};if(a!=null&&(o.timeExtent=a),t.type==="imagery"){await t.load({signal:i});const s=t.rasterInfo.dataType,c=await t.fetchImage(e,n,l,o);return((r=c==null?void 0:c.pixelData)==null?void 0:r.pixelBlock)==null?{data:new Float32Array(n*l*2),mask:new Uint8Array(n*l),width:n,height:l}:bt(s,c.pixelData.pixelBlock)}await t.load({signal:i});const u=t.serviceRasterInfo.dataType,h=await t.fetchPixels(e,n,l,o);return(h==null?void 0:h.pixelBlock)==null?{data:new Float32Array(n*l*2),mask:new Uint8Array(n*l),width:n,height:l}:bt(u,h.pixelBlock)}export{Te as A,Pt as B,Pe as C,_e as D,Fe as E,Be as M,Ve as R,Ee as S,Se as T,Ht as U,Ce as W,re as _,De as a,Ne as b,ye as c,xe as d,at as e,At as f,Oe as g,mt as h,ht as i,be as j,Ue as k,Ct as l,Le as m,ve as n,R as o,Re as p,Ae as q,we as r,je as s,Me as t,_ as u,wt as v,xt as w,Ie as x,ke as y,$e as z};
